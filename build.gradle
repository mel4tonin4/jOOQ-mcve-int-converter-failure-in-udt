plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'application'
    id "org.flywaydb.flyway" version "7.2.0"
    id 'nu.studer.jooq' version '5.2'
}
group = 'com.github.mel4tonin4'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
dependencies {
    jooqGenerator "org.postgresql:postgresql:$postgresql_driver_version"
    api("org.jooq:jooq:$jooq_version")
    implementation "org.postgresql:postgresql:$postgresql_driver_version"

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}
compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
application {
    mainClassName = 'MainKt'
}

flyway {
    url = "$mvce_database_url"
    user = "$mvce_database_username"
    password = "$mvce_database_password"
}

jooq {
    version = "$jooq_version"
    edition = nu.studer.gradle.jooq.JooqEdition.OSS

    configurations {
        main {
            generateSchemaSourceOnCompilation = true

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = "$mvce_database_url"
                    user = "$mvce_database_username"
                    password = "$mvce_database_password"
                    properties {
                        property {
                            key = 'ssl'
                            value = 'true'
                        }
                        property {
                            key = 'sslmode'
                            value = 'require'
                        }
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'mcve'
                        forcedTypes {
                            /*forcedType {
                                userType = 'com.github.mel4tonin4.mcve.MyId'
                                converter = 'com.github.mel4tonin4.mcve.UuidMyIdConverter'

                                includeExpression = '.*\\..*my_id.*'
                                includeTypes = 'uuid'
                            }*/
                            forcedType {
                                userType = 'com.github.mel4tonin4.mcve.MyValue'
                                converter = 'com.github.mel4tonin4.mcve.IntMyValueConverter'

                                includeExpression = '.*\\..*my_value.*'
                                includeTypes = 'integer'
                            }
                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        fluentSetters = true

                        interfaces = false
                        pojos = true
                        immutablePojos = false
                    }
                    target {
                        packageName = 'com.github.mel4tonin4.mcve.jooq'
                        directory = 'build/generated/source/jooq/main'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}